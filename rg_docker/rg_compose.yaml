version: "3"

services:
    rg_server:
        build:
            dockerfile: Dockerfile_server
            context: ..
        image: rg_server:1.0
        ports:
            - "50051:50051"
        environment:
            - MDS_PLATFORM_ADDRESS=mds_platform_sink
        depends_on:
            -   "mds_platform_sink"
        command: ["./wait-for-it.sh", "-t", "0", "mds_platform_sink:8000", "--", "python", "route_guide_server.py"]

    rg_client:
        build:
            dockerfile: Dockerfile_client
            context: ..
        image: rg_client:1.0
        environment:
            - ROUTE_GUIDE_SERVER_ADDRESS=rg_server
            - CLIENT_FREQUENCY_IN_SECONDS=1
            - MDS_PLATFORM_ADDRESS=mds_platform_sink
        deploy:
            replicas: 1
        depends_on:
            -   "rg_server"
        command: ["./wait-for-it.sh", "-t", "0", "rg_server:50051", "--", "python", "route_guide_client.py"]

    mds_platform_sink:
        image: mds_sink:1.0
        build:
            dockerfile: Dockerfile_mds_sink
            context: ..
        ports:
            - "8000:8000"
        environment:
            - ELASTICSEARCH_ADDRESS=elastic_search
        depends_on:
            - "elastic_search"
        command: ["./wait-for-it.sh", "-t", "0", "elastic_search:9200", "--", "python", "events_reciver_server.py"]

    mds_platform_normalizer:
        image: mds_normalizer:1.0
        build:
            dockerfile: Dockerfile_mds_normalizer
            context: ..
        environment:
            - ELASTICSEARCH_ADDRESS=elastic_search
            - TIMER_IN_MINUTES=1
        depends_on:
            -   "elastic_search"
        command: ["./wait-for-it.sh", "-t", "0", "elastic_search:9200", "--", "python", "event_normalizer.py"]

    elastic_search:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.2.0
        ports:
            - "9200:9200"
        environment:
            - http.host=0.0.0.0
            - transport.host=127.0.0.1
            - xpack.security.enabled=false
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://0.0.0.0:9200" ]
            interval: 30s
            timeout: 10s
            retries: 5

    kibana:
        image: docker.elastic.co/kibana/kibana:8.2.0
        ports:
            - "5601:5601"
    grafana:
        image: grafana/grafana
        ports:
            - "3000:3000"